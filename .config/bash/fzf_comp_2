#!/usr/bin/env bash

# inspired from: https://unix.stackexchange.com/questions/25935/how-to-output-string-completions-to-stdout/31023#31023
PRE_CURSOR="${READLINE_LINE:0:$READLINE_POINT}"
COMP_LINE="$PRE_CURSOR"
COMP_WORDS=()
for WORD in $PRE_CURSOR; do COMP_WORDS+=("$WORD"); done
test "${READLINE_LINE:READLINE_POINT-1:1}" = ' ' && COMP_WORDS+=('')

case "${#COMP_WORDS[@]}" in
  0|1)
    compgen -abck > /tmp/fzf_comp
    ;;
  *)
    COMP_CWORD=${#COMP_WORDS[@]}
    ((COMP_CWORD--))
    COMP_POINT=${#COMP_LINE}
    COMP_WORDBREAKS='"'"'><=;|&(:"
    COMP_TYPE=9
    COMP_KEY=9
    _command_offset 0 2> /dev/null

    # if no completions, use current directory files and directories
    test 0 -eq ${#COMPREPLY[@]} && COMPREPLY=($(compgen -f -- "${COMP_WORDS[-1]}"))

    printf "%s\n" "${COMPREPLY[@]}" > /tmp/fzf_comp
    ;;
esac

word="$(. ~/.config/bash/get_last_word_before_cursor)"
selected="$(cat /tmp/fzf_comp \
  | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' \
  | awk '!x[$0]++' \
  | fzf --layout=reverse --height=7 \
        --query=$word \
        --exit-0  --select-1 )" || return

. ~/.config/bash/insert_at_cursor
